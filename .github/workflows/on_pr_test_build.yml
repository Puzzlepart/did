name: Test build
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      - master
      - dev
    paths-ignore:
      - '**.md'
      - '**.yml'
  
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-setup-${{ github.ref }}
      cancel-in-progress: true
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: Use Node.js (${{ vars.NODE_VERSION }})
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --no-audit --no-fund --loglevel=error --include=dev
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  test:
    name: Run Tests
    needs: setup
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-test-${{ github.ref }}
      cancel-in-progress: true
    if: "contains(github.event.head_commit.message, '[ava]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: Use Node.js (${{ vars.NODE_VERSION }})
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run Ava tests
        run: npm test

  lint:
    name: Lint Code
    needs: setup
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-lint-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: Use Node.js (${{ vars.NODE_VERSION }})
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run ESLint
        run: npm run lint

  build_client:
    name: Build Client
    needs: [test]
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-build_client-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: Use Node.js (${{ vars.NODE_VERSION }})
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Package client
        run: |
          export NODE_OPTIONS="--max-old-space-size=8192"
          npm run package:client
        env:
          DEBUG: webpack*
          NODE_ENV: production

  build_server:
    name: Build Server
    needs: [test]
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-build_server-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: Use Node.js (${{ vars.NODE_VERSION }})
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Build server
        run: npm run build:server
        env:
          NODE_ENV: production