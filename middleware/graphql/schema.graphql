type Project {
	id: String
	key: String
	customerKey: String
	projectKey: String
	name: String
}

type Customer {
	id: String
	key: String
	customerKey: String
	name: String
}

type Event {
	id: String
	subject: String
	startTime: String
	endTime: String
	duration: Int
	project: Project
	webLink: String
}

type TimeEntry {
	id: String
	title: String
	description: String
	startTime: String
	endTime: String
	duration: Int
	webLink: String
	durationHours: Float
	customerKey: String
	projectKey: String
	weekNumber: Int
	yearNumber: Int
	resourceId: String
	resourceEmail: String
	resourceName: String
	webUrl: String
}

input TimeEntryInput {
	id: String
	projectKey: String
}

type Query {
	projects: [Project!]!
	customers: [Customer!]!
	customerProjects(customerKey: String!): [Project!]!
	weekView(weekNumber: Int!): [Event!]!
	isWeekConfirmed(weekNumber: Int!): Boolean
	confirmedHours(weekNumber: Int!): Float!
	confirmedMinutes(weekNumber: Int!): Int!
	confirmedEntries(projectKey: String, resourceId: String): [TimeEntry!]!
}

type Mutation {
	confirmWeek(entries: [TimeEntryInput!], weekNumber: Int!): Float!
	unconfirmWeek(weekNumber: Int!): Boolean!
}